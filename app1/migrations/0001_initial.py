# Generated by Django 2.2.7 on 2020-12-06 07:08

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.IntegerField(primary_key=True, serialize=False)),
                ('c_name', models.CharField(max_length=30)),
                ('c_info', models.TextField(blank=True, null=True)),
                ('c_hot', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'course',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Indent',
            fields=[
                ('indent_id', models.AutoField(primary_key=True, serialize=False)),
                ('s_id', models.CharField(max_length=11)),
                ('t_id', models.CharField(max_length=11)),
                ('c_id', models.IntegerField()),
                ('status', models.IntegerField()),
                ('type', models.IntegerField()),
                ('create_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'indent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('problem_id', models.AutoField(primary_key=True, serialize=False)),
                ('p_info', models.TextField()),
                ('p_ans', models.TextField(blank=True, null=True)),
                ('c_id', models.IntegerField()),
                ('p_price', models.FloatField()),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('t_id', models.CharField(max_length=11)),
                ('s_id', models.CharField(max_length=11)),
            ],
            options={
                'db_table': 'problem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.CharField(max_length=11, primary_key=True, serialize=False)),
                ('s_name', models.CharField(max_length=20)),
                ('s_password', models.CharField(max_length=30)),
                ('sex', models.CharField(blank=True, max_length=2, null=True)),
                ('email', models.CharField(max_length=30)),
                ('account', models.PositiveIntegerField()),
                ('info', models.TextField(blank=True, null=True)),
                ('tel', models.CharField(blank=True, max_length=11, null=True)),
                ('last_login_time', models.DateTimeField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'student',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_id', models.IntegerField(primary_key=True, serialize=False)),
                ('tag_name', models.CharField(max_length=30)),
                ('creat_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Teach',
            fields=[
                ('teach_id', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('finish_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'teach',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('teacher_id', models.CharField(max_length=11, primary_key=True, serialize=False)),
                ('t_name', models.CharField(max_length=20)),
                ('t_password', models.CharField(max_length=30)),
                ('sex', models.CharField(blank=True, max_length=2, null=True)),
                ('account', models.PositiveIntegerField()),
                ('c_num', models.IntegerField()),
                ('hot', models.IntegerField(blank=True, null=True)),
                ('satisfaction', models.IntegerField(blank=True, null=True)),
                ('tel', models.CharField(blank=True, max_length=11, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'teacher',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TeaCou',
            fields=[
                ('tea_cou_id', models.IntegerField(primary_key=True, serialize=False)),
                ('t_c_hot', models.IntegerField()),
                ('info', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('sum_student', models.IntegerField(blank=True, null=True)),
                ('creat_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tea_cou',
                'managed': False,
            },
        ),
    ]
